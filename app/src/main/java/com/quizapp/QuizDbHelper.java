package com.quizapp;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import com.quizapp.QuizContract.*;
import androidx.annotation.Nullable;

import java.util.ArrayList;
import java.util.List;

public class QuizDbHelper extends SQLiteOpenHelper {



    private static final String DATABASE_NAME = "QuizApp.db";
    private static final int DATABASE_VERSION = 1;
    private SQLiteDatabase db;

    public QuizDbHelper(Context context) {

        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {

        this.db = db;
        final String SQL_CREATE_QUESTIONS_TABLE = "CREATE TABLE "+
                QuestionTable.TABLE_NAME + " ( "+
                QuestionTable._ID + " INTEGER PRIMARY KEY AUTOINCREMENT, "+
                QuestionTable.COLUMN_QUESTION + " TEXT, "+
                QuestionTable.COLUMN_OPTION1 + " TEXT, "+
                QuestionTable.COLUMN_OPTION2 + " TEXT, "+
                QuestionTable.COLUMN_OPTION3 + " TEXT, "+
                QuestionTable.COLUMN_OPTION4 + " TEXT, "+
                QuestionTable.COLUMN_ANSWER + " INTEGER" + ")";

        db.execSQL(SQL_CREATE_QUESTIONS_TABLE);
        fillQuestionsTable();
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

        db.execSQL("DROP TABLE IF EXISTS "+QuestionTable.TABLE_NAME);
        onCreate(db);
    }

    public void addQuestions(Questions questions){
        ContentValues cv = new ContentValues();
        cv.put(QuestionTable.COLUMN_QUESTION,questions.getQuestion());
        cv.put(QuestionTable.COLUMN_OPTION1,questions.getOp1());
        cv.put(QuestionTable.COLUMN_OPTION2,questions.getOp2());
        cv.put(QuestionTable.COLUMN_OPTION3,questions.getOp3());
        cv.put(QuestionTable.COLUMN_OPTION4,questions.getOp4());
        cv.put(QuestionTable.COLUMN_ANSWER,questions.getCorrectAnswer());

        db.insert(QuestionTable.TABLE_NAME,null, cv);
    }

    private void fillQuestionsTable(){
        Questions q1 = new Questions("What is Android","OS","Driver","Software","Hardware",1);
        addQuestions(q1);
        Questions q2 = new Questions(
                "The action of doing something over and over again, repeating code?",
                "Code",
                "Loop",
                "Program",
                "Bug",
                2);
        addQuestions(q2);
        Questions q3 = new Questions(
                "A person who writes code and communicates instructions to a computer",
                "Code",
                "Algorithm",
                "Programmer",
                "Commander",
                3);
        addQuestions(q3);
        Questions q4 = new Questions(
                "HTML is what type of language",
                "Scripting Language",
                "Markup Language",
                "Network Protocol",
                "Programming Language",
                2);
        addQuestions(q4);
        Questions q5 = new Questions(
                "Who is known as father of Java Programming Language",
                "James Gosling",
                "M. P Java",
                "Charel Babbage",
                "Blais Pascal",
                1);
        addQuestions(q5);
        Questions q6 = new Questions(
                "In java control statements break, continue, return, try-catch-finally and assert belongs to",
                "Selection statements",
                "Loop Statements",
                "Pause Statement",
                "Transfer statements",
                4);
        addQuestions(q6);
//        Questions q7 = new Questions(
//                "Which provides runtime environment for java byte code to be executed",
//                "JDK",
//                "JVM",
//                "JRE",
//                "JAVAC",
//                2);
//        addQuestions(q7);
//        Questions q8 = new Questions(
//                "What is byte code in Java",
//                "Code generated by a Java compiler",
//                "Code generated by a Java Virtual Machine",
//                "Name of Java source code file",
//                "Block of code written inside a class",
//                1);
//        addQuestions(q8);
//        Questions q9 = new Questions(
//                "Which of the following are not Java keywords",
//                "switch",
//                "double",
//                "then",
//                "instanceof",
//                3);
//        addQuestions(q9);
//        Questions q10 = new Questions(
//                "What is garbage collection in the context of Java",
//                "Java deletes all unused java files on the system",
//                "Memory used by the object with no reference is automatically reclaimed",
//                "The JVM cleans output of Java program with error",
//                "Any unused package in a program automatically gets deleted",
//                2);
//        addQuestions(q10);
    }

    public ArrayList<Questions> getAllQuestions(){
        ArrayList<Questions> questionList = new ArrayList<>();
        db = getReadableDatabase();

        String Projection[]={
          QuestionTable._ID,
                QuestionTable.COLUMN_QUESTION,
                QuestionTable.COLUMN_OPTION1,
                QuestionTable.COLUMN_OPTION2,
                QuestionTable.COLUMN_OPTION3,
                QuestionTable.COLUMN_OPTION4,
                QuestionTable.COLUMN_ANSWER
        };

        Cursor c = db.query(
                QuestionTable.TABLE_NAME,
                Projection,
                null,
                null,
                null,
                null,
                null
                );
        if(c.moveToFirst()){
            do{
                Questions questions = new Questions();
                questions.setQuestion(c.getString(c.getColumnIndex(QuestionTable.COLUMN_QUESTION)));
                questions.setOp1(c.getString(c.getColumnIndex(QuestionTable.COLUMN_OPTION1)));
                questions.setOp2(c.getString(c.getColumnIndex(QuestionTable.COLUMN_OPTION2)));
                questions.setOp3(c.getString(c.getColumnIndex(QuestionTable.COLUMN_OPTION3)));
                questions.setOp4(c.getString(c.getColumnIndex(QuestionTable.COLUMN_OPTION4)));
                questions.setCorrectAnswer(c.getInt(c.getColumnIndex(QuestionTable.COLUMN_ANSWER)));
                questionList.add(questions);

            }while (c.moveToNext());
        }
        c.close();
        return questionList;
    }
}
